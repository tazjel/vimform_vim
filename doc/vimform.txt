*vimform.txt*       Simple text-based forms for vim
                    Author: Tom Link, micathom at gmail com

Example: >

    let form = vimform#New()
    let form.name = "Test Form"
    let form.fields = [
                \ ['Name'],
                \ ['Address',  {'join': "\n"}],
                \ ['Planet',   {'value': 'Earth'}],
                \ ['Phone',    {'validate': '%s =~ ''^[0-9()+-]*$''',
                \               'message': 'Must be a phone number'}],
                \ ['E-Mail',   {'validate': '%s =~ ''^\([a-zA-Z.]\+@[a-zA-Z]\+\.[a-zA-Z.]\+\)\?$''',
                \               'message': 'Must be an e-mail'}],
                \ ['Private',  {'value': 0, 'type': 'checkbox'}],
                \ ['Business', {'value': 1, 'type': 'checkbox'}],
                \ ]
    function! form.Do_Submit() dict "{{{3
        echom "Test: ". self.name
        for [field, value] in items(self.values)
            echom "Field" field value
        endfor
    endf

    call form.Split()

This will create a form, which looks like this: >

    <<&Submit>> <<&Cancel>>
         Name: 
      Address: 
       Planet: Earth
        Phone: 
       E-Mail: 
      Private: [ ]
     Business: [X]

The following field types are currently supported:

    - text fields
    - check boxes

Check boxes can be toggled by pressing: <cr>, <space>, of <LeftMouse>.

Use <tab> to change fields.

Press <c-cr> to submit the form. If the cursor, is not over a button, 
the Do_Submit() method will be called.

Press <c-space> (or <c-x><c-o>) to invoke the completion menu if a 
completion function is defined for the current field.

Buttons are marked with |mark|s. So you can jump to a button with |`|X, 
where X is the "accelerator" key marked with "&".


-----------------------------------------------------------------------
Install~

In order to install the vba, open the vba file in VIM and type: >

    :so %

See :help vimball for details.

This script requires hookcursormoved (vimscript #2037) to be installed.

Also available via git: http://github.com/tomtom/vimform_vim/


========================================================================
Contents~

        vimform#New ............ |vimform#New()|
        vimform#SimpleForm ..... |vimform#SimpleForm()|
        g:vimform#prototype .... |g:vimform#prototype|
        vimform#Complete1 ...... |vimform#Complete1()|
        vimform#Complete ....... |vimform#Complete()|


========================================================================
autoload/vimform.vim~

                                                    *vimform#New()*
vimform#New()
    Return the default form template.

                                                    *vimform#SimpleForm()*
vimform#SimpleForm()
    Return a form template that has no default buttons.

                                                    *g:vimform#prototype*
g:vimform#prototype            (default: {...})
    The default form tepmlate.



    Show the form in a split window.


g:vimform#prototype#Show(?cmd = "split")
    Show the form.
    cmd should create a new buffer. By default, the new buffer will be 
    shown in a split view.

                                                    *vimform#Complete1()*
vimform#Complete1()

                                                    *vimform#Complete()*
vimform#Complete(findstart, base)



vim:tw=78:fo=tcq2:isk=!-~,^*,^|,^":ts=8:ft=help:norl:
