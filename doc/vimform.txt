*vimform.txt*       Simple text-based forms for vim
                    Author: Tom Link, micathom at gmail com

Example: >

    let form = vimform#New()
    let form.name = "Test Form"
    let form.fields = [
                \ ['Name'],
                \ ['Address',  {'join': "\n"}],
                \ ['Planet',   {'value': 'Earth'}],
                \ ['Phone',    {'validate': '%s =~ ''^[0-9()+-]*$''',
                \               'message': 'Must be a phone number'}],
                \ ['E-Mail',   {'validate': '%s =~ ''^\([a-zA-Z.]\+@[a-zA-Z]\+\.[a-zA-Z.]\+\)\?$''',
                \               'message': 'Must be an e-mail'}],
                \ ['Private',  {'value': 0, 'type': 'checkbox'}],
                \ ['Business', {'value': 1, 'type': 'checkbox'}],
                \ ]
    function! form.Do_Submit() dict "{{{3
        echom "Test: ". self.name
        for [field, value] in items(self.values)
            echom "Field" field value
        endfor
    endf

    call form.Split()

This will create a form, which looks like this: >

    <<&Submit>> <<&Cancel>>
         Name: 
      Address: 
       Planet: Earth
        Phone: 
       E-Mail: 
      Private: [ ]
     Business: [X]

Check out further examples on:
http://github.com/tomtom/vimform_vim/tree/master/test/

The following field types are currently supported:

    - text fields
    - check boxes
    - single choice/drop-down lists

                                                    *vimform-keys*
The following key maps can be used to navigate through forms:

<c-cr>          "Press" a button. If the cursor, is not over a button, 
                the form will be submitted, i.e. the Do_Submit() method 
                is called.

<c-w>c          Abandon/close/cancel the form.

<f5>            Redraw the form.

<tab>           Jump to the next field (this will also save the current 
                field's value so that it doesn't get lost when redrawing 
                a form)

<s-tab>         Jump to the previous field

<c-x><c-o>
<c-space>       Invoke the completion menu if a completion function is 
                defined for the current field.

`[LETTER]       Accelerator keys are prefixed with an ampersand (&). 
                Those letters are defined as |mark|s. Jump to a button 
                with |`|.

<LeftMouse>
<space>
<cr>            If the cursor is located over a checkbox, toggle that 
                check box. If the cursor is over a drop-down list, open the 
                list.

a
i               Switch to insert mode.

<c-n> <c-p> <c-y> <c-e>
                Navigate drop-down lists. See also |ins-completion|.


-----------------------------------------------------------------------
Install~

In order to install the vba, open the vba file in VIM and type: >

    :so %

See :help vimball for details.

Also available via git: http://github.com/tomtom/vimform_vim/


========================================================================
Contents~

        :Vimform .................................... |:Vimform|
        vimform#New ................................. |vimform#New()|
        vimform#SimpleForm .......................... |vimform#SimpleForm()|
        :VimformReset ............................... |:VimformReset|
        g:vimform#forms ............................. |g:vimform#forms|
        g:vimform#view .............................. |g:vimform#view|
        g:vimform#prototype ......................... |g:vimform#prototype|
        g:vimform#widgets ........................... |g:vimform#widgets|
        vimform#AppendOrInsert ...................... |vimform#AppendOrInsert()|
        vimform#Insertmode .......................... |vimform#Insertmode()|
        vimform#Feedkeys ............................ |vimform#Feedkeys()|
        vimform#PumKey .............................. |vimform#PumKey()|
        vimform#SpecialInsertKey .................... |vimform#SpecialInsertKey()|
        vimform#Balloon ............................. |vimform#Balloon()|
        vimform#Complete1 ........................... |vimform#Complete1()|
        vimform#Complete ............................ |vimform#Complete()|
        vimform#CompleteSingleChoice ................ |vimform#CompleteSingleChoice()|
        vimform#CommandComplete ..................... |vimform#CommandComplete()|
        vimform#Command ............................. |vimform#Command()|
        vimform#Motion .............................. |vimform#Motion()|
        prototype.GetValidate
        prototype.SetCursorMoved
        prototype.GetPumKey
        prototype.GetSpecialInsertKey
        prototype.GetSpecialKey
        prototype.GetKey
        prototype.Key_dd
        prototype.Key_BS
        prototype.Key_DEL
        vimform#widgets#file#Complete ............... |vimform#widgets#file#Complete()|
        vimform#widgets#file#Validate ............... |vimform#widgets#file#Validate()|
        prototype.Format
        prototype.GetFieldValue
        prototype.GetSpecialKey
        prototype.GetSpecialKey
        prototype.GetSpecialInsertKey
        prototype.Key_dd
        prototype.Format
        prototype.GetFieldValue
        prototype.SelectField
        prototype.SetCursorMoved
        prototype.GetPumKey
        prototype.GetSpecialInsertKey
        prototype.GetSpecialKey
        prototype.GetKey
        prototype.Key_dd
        prototype.Key_BS
        prototype.Key_DEL
        prototype.Format
        prototype.GetFieldValue
        prototype.GetSpecialKey
        prototype.GetSpecialKey
        prototype.Key_dd
        vimform#forms#substitute#ValidateRegexp ..... |vimform#forms#substitute#ValidateRegexp()|
        vimform#forms#substitute#ValidateSubst ...... |vimform#forms#substitute#ValidateSubst()|
        prototype.FormatLabel
        prototype.Format
        prototype.GetFieldValue
        prototype.SelectField
        prototype.GetValidate
        prototype.SetCursorMoved
        prototype.GetPumKey
        prototype.GetSpecialInsertKey
        prototype.GetSpecialKey
        prototype.GetKey
        prototype.Key_dd
        prototype.Key_BS
        prototype.Key_DEL
        vimform#widget#New .......................... |vimform#widget#New()|


========================================================================
plugin/vimform.vim~

                                                    *:Vimform*
:Vimform


========================================================================
autoload/vimform.vim~

                                                    *vimform#New()*
vimform#New()
    Return the default form template.

                                                    *vimform#SimpleForm()*
vimform#SimpleForm()
    Return a form template that has no default buttons.

                                                    *:VimformReset*
:VimformReset
    Reset the current form.
    If called with [!], use the original values. Otherwise try to reuse 
    the current values.

                                                    *g:vimform#forms*
g:vimform#forms                (default: {})

                                                    *g:vimform#view*
g:vimform#view                 (default: "split")

                                                    *g:vimform#prototype*
g:vimform#prototype            (default: {...})

                                                    *g:vimform#widgets*
g:vimform#widgets              (default: {})

                                                    *vimform#AppendOrInsert()*
vimform#AppendOrInsert()

                                                    *vimform#Insertmode()*
vimform#Insertmode()

                                                    *vimform#Feedkeys()*
vimform#Feedkeys(keys, level)

                                                    *vimform#PumKey()*
vimform#PumKey(key)

                                                    *vimform#SpecialInsertKey()*
vimform#SpecialInsertKey(key, pumkey, prepend)

                                                    *vimform#Balloon()*
vimform#Balloon()

                                                    *vimform#Complete1()*
vimform#Complete1()

                                                    *vimform#Complete()*
vimform#Complete(findstart, base)

                                                    *vimform#CompleteSingleChoice()*
vimform#CompleteSingleChoice(findstart, base)

                                                    *vimform#CommandComplete()*
vimform#CommandComplete(ArgLead, CmdLine, CursorPos)

                                                    *vimform#Command()*
vimform#Command(cmd)

                                                    *vimform#Motion()*
vimform#Motion(motion)


========================================================================
autoload/vimform/widgets/singlechoice.vim~

prototype.GetValidate

prototype.SetCursorMoved

prototype.GetPumKey

prototype.GetSpecialInsertKey

prototype.GetSpecialKey

prototype.GetKey

prototype.Key_dd

prototype.Key_BS

prototype.Key_DEL


========================================================================
autoload/vimform/widgets/file.vim~

                                                    *vimform#widgets#file#Complete()*
vimform#widgets#file#Complete(findstart, base)

                                                    *vimform#widgets#file#Validate()*
vimform#widgets#file#Validate(file)

prototype.Format

prototype.GetFieldValue

prototype.GetSpecialKey

prototype.GetSpecialKey

prototype.GetSpecialInsertKey

prototype.Key_dd


========================================================================
autoload/vimform/widgets/checkbox.vim~

prototype.Format

prototype.GetFieldValue

prototype.SelectField

prototype.SetCursorMoved

prototype.GetPumKey

prototype.GetSpecialInsertKey

prototype.GetSpecialKey

prototype.GetKey

prototype.Key_dd

prototype.Key_BS

prototype.Key_DEL


========================================================================
autoload/vimform/widgets/dir.vim~

prototype.Format

prototype.GetFieldValue

prototype.GetSpecialKey

prototype.GetSpecialKey

prototype.Key_dd


========================================================================
autoload/vimform/forms/substitute.vim~

                                                    *vimform#forms#substitute#ValidateRegexp()*
vimform#forms#substitute#ValidateRegexp(rx)

                                                    *vimform#forms#substitute#ValidateSubst()*
vimform#forms#substitute#ValidateSubst(str)


========================================================================
autoload/vimform/widget.vim~

prototype.FormatLabel

prototype.Format

prototype.GetFieldValue

prototype.SelectField

prototype.GetValidate

prototype.SetCursorMoved

prototype.GetPumKey

prototype.GetSpecialInsertKey

prototype.GetSpecialKey

prototype.GetKey

prototype.Key_dd

prototype.Key_BS

prototype.Key_DEL

                                                    *vimform#widget#New()*
vimform#widget#New()



vim:tw=78:fo=tcq2:isk=!-~,^*,^|,^":ts=8:ft=help:norl:
