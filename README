*vimform.txt*       Simple text-based forms for vim

Example: >

    let form = vimform#New()
    let form.name = "Test Form"
    let form.fields = [
                \ ['Name'],
                \ ['Address',  {'join': "\n"}],
                \ ['Planet',   {'value': 'Earth'}],
                \ ['Phone',    {'validate': '%%s =~ ''^[0-9()+-]*$''',
                \               'message': 'Must be a phone number'}],
                \ ['E-Mail',   {'validate': '%%s =~ ''^\([a-zA-Z.]\+@[a-zA-Z]\+\.[a-zA-Z.]\+\)\?$''',
                \               'message': 'Must be an e-mail'}],
                \ ['Private',  {'value': 0, 'type': 'checkbox'}],
                \ ['Business', {'value': 1, 'type': 'checkbox'}],
                \ ]
    function! form.Do_Submit() dict "{{{3
        echom "Test: ". self.name
        for [field, value] in items(self.values)
            echom "Field" field value
        endfor
    endf

    call form.Split()

This will create a form, which looks like this: >

    <<&Submit>> <<&Cancel>>
         Name: 
      Address: 
       Planet: Earth
        Phone: 
       E-Mail: 
      Private: [ ]
     Business: [X]

The following field types are currently supported:

    - text fields
    - check boxes

Check boxes can be toggled by pressing: <cr>, <space>, of <LeftMouse>.

Use <tab> to change fields.

Press <c-cr> to submit the form. If the cursor, is not over a button, 
the Do_Submit() method will be called.

Buttons are marked with |mark|s. So you can jump to a button with |`|X, 
where X is the "accelerator" key marked with "&".


-----------------------------------------------------------------------

Extracted from http://github.com/tomtom/vimtlib
Status:  Experimental
Install: See http://github.com/tomtom/vimtlib/blob/master/INSTALL.TXT

